<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="rtfResults.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonEmergencyStop.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fPKg1QAAAABJRU5ErkJggg==
</value>
  </data>
</root>