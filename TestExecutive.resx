<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="rtfResults.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonEmergencyStop.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UPjM9QAAAABJRU5ErkJggg==
</value>
  </data>
</root>