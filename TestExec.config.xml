<?xml version="1.0" encoding="utf-8" ?>
<!--
	This TestExec.GlobalConfigurationFile file allows configuring TestExec settings easily:
	Iinstruments:
	- For calibration or replacement, swap identical  Instruments with others, then update Addresses.
	- For additions/deletions, add/remove Instruments.  Update TestExec if needed.

	NOTE:  Each TestPlan must utilize static class 'InstrumentA' in file TestPlan.cs to map generic Instrument IDs to, optimally, more meaningful domain specific aliases:
		  
			  internal static class InstrumentA {
			      internal static readonly Alias P2V5      = new Alias("PS1");   // Single output Power Supply 1
			      internal static readonly Alias P3V3      = new Alias("PS2");   // Single output Power Supply 2
			      internal static readonly Alias P5V       = new Alias("PS3");   // Single output Power Supply 3
			      internal static readonly Alias P12V_N12V = new Alias("PS4ε5"); // Dual-output Power Supplies 4 & 5.
			      internal static readonly Alias VOUT      = new Alias("EL1");   // Electrical Load 1.
			      internal static readonly Alias MM        = new Alias("MM1");   // Multi-Meter 1.
			      internal static readonly Alias CLK       = new Alias("WG1");   // WaveGenerator 1.
			  }

			- Include only required/utilized Instruments:
				- That is, if this TestExec.GlobalConfigurationFile contains elements for 10 power supplies, but a TestPlan program
				  only requires & utilizes 2, simply don't alias the unused 8 in class 'InstrumentA'.
			- This documents the minimum necessary Instrument configuration for the TestPlan's program.
			- Allows a TestPlan program to be most easily ported to different Test Systems having different TestExec.GlobalConfigurationFile configurations.
				- If Test System #1 with it's specific Instruments dies suddenly, may need to run its TestPlan programs on Test System #2
					with different Instruments.
				- If all TestPlan.cs files list only their necessary Instruments, quite easy to determine which are 
					compatible subsets of the Test Systems' TestExec.GlobalConfigurationFile configurations.
			- This approach is similar to the Keysight i3070's Board config files:
				- i3070 Board config files specify only the subset of i3070 cards used by their test programs.
				- This makes porting a Keysight i3070 In-Circuit Test program to a differently configured i3070 as easy as possible, though not necessarily easy.
		
	ID:			- Required element.
					- Unique Identifier; no 2 can be identical, as ID is unique key in a Dictionary object.
					- Recommend following naming conventions:
						- CT1, CT2, CT3ε4...	      Single-input Counter Timers 1 & 2 and Dual-input 3ε4.
						- EL1, EL2, EL3ε4...	      Single-channel Electronic Loads 1 & 2 and Dual-channel 3ε4.
						- LCR1, LCR2, LCR3...	      Single-input LCR Meters 1, 2 & 3.
            - MM1, MM2, MM3...		      Single-input MultiMeters 1, 2 & 3.
						- MSO1, MSO, MSO3...			  Mixed-Signal Oscilloscopes 1, 2 & 3; single & multiple channels.
						- MSMU1, MSMU2, MSMU3...    Multifunction Switch/Measuring Units 1, 2 & 3.
            - OS1, OS2, OS3...	        Oscilloscopes 1, 2 & 3; single & multiple channels.
						- PS1, PS2, PS4ε5...	      Single-output Power Supplies 1 & 2 and Dual-output 3ε4.

            - WG1, WG2, WG3ε4...	      Single-output Waveform Generators 1 & 2 and Dual-output 3ε4.

	Detail:	- Required element.
						- Concise description of Instrument.
						- Recommend convention of Manufacturer, Model, Input/Output quantity if applicable, and Instrument type.
							- Keysight E36103B Single-output Power Supply
							- Keysight E36234A Dual-output Power Supply
							- Keysight 34461A Multi-Meter
	Address:		-Required element.
						- Address elements must also all be unique, no duplicates.
						- They must also be valid VISA instrument addresses.
						- VISA instrument addresses are easily determined using Keysight's Connection Expert app
							- https://www.keysight.com/us/en/assets/7018-03222/data-sheets/5990-9362.pdf.
							- Example VISA address for USB instrument: USB0::0x2A8D::0x1602::MY61001983::0::INSTR.
	NOTE:  VISA addresses (AKA VISA Resource Names) are explained at:
	- https://www.ni.com/docs/en-US/bundle/labview/page/lvinstio/visa_resource_name_generic.html.
	- https://www.ivifoundation.org/downloads/Architecture%20Specifications/vpp43_2022-05-19.pdf.
-->
<Configuration>
	<BarCodeScannerID>\\?\HID#VID_0C2E&amp;PID_0A07&amp;MI_00#7&amp;1f27e379&amp;0&amp;0000#{c243ffbd-3afc-45e9-b3d3-2ba18bc7ebc5}\posbarcodescanner</BarCodeScannerID> <!-- Honeywell Voyager USB 1200g -->
  <!-- BarCodeScannerID is the identifier used to find & claim the Barcode Scanner used in class SerialNumberDialog.
        When a TestExec's App.config LOGGER_SerialNumberDialogEnabled = true:
				- Class SerialNumberDialog is the Barcode Scanning method for prompting test operators for UUT Serial Numbers.
				- SerialNumberDialog exclusively enforces Serial Number entry via Barcode Scanning of ABT's official Code39 encoded Serial Number.
          - This enforces correct Barcode Scanning of ABT Serial Numbers, unlike hand-typing them, with it's substantially higher error rates..
				When a TestExec's App.config LOGGER_SerialNumberDialogEnabled = false:
				- An Interaction.InputBox prompts test operator to enter ABT Serial Numbers.
          - This permits both Barcode Scanning *and* manual keyboard entry of Serial Numbers (hand typing), with its concommitant high rate of typographic errors.
           
        NOTE:  Barcode Scanner must be a corded USB scanner, and must also be explicitly supported by Microsoft's Windows.Devices.PointOfService namespace.
        - List of supported scanners at https://learn.microsoft.com/en-us/windows/uwp/devices-sensors/pos-device-support.
				NOTE:  Barcode Scanner must be programmed into USB HID mode to work correctly with TestExec's SerialNumberDialog class to read ABT Serial Numbers.
              - For a Voyager 1200g, scan PAP131 label from "Honeywell Voyager 1200G User's Guide ReadMe.pdf" to program into USB HID mode.
              - Both "ReadMe" & "User's Guides" documents reside in Logging folder for convenience.
        NOTE:  Barcode Scanner must also be programmed to read the Code39 Barcode Symbology of ABT's Serial Numbers.
	-->
  
  <SerialNumberRegExDefault>^01BB2-[0-9]{5}$</SerialNumberRegExDefault>
  <!-- SerialNumberRegExDefault is the default global Regular Expression an ABT Serial Number is validated against in TestExec.
                
         NOTE:  SerialNumberRegExDefault can be locally overridden by a TestExec App.config's UUT_SerialNumberRegExCustom key/value pair.
         - As Customers sometimes require Serial Number formats that differ from ABT's (or formats that differ even from one Customer UUT to another)
           SerialNumberRegExDefault is customizable to any/every UUT tested.
         - When not overridden by an App.config's UUT_SerialNumberRegExCustom, SerialNumberRegExDefault is applied instead.
         
         NOTE:  ABT's official Serial Number format is "01BB2-#####", where each "#" is an is an integer in the set {0..9}.
         - This allows for only 100,000 unique Serial Numbers overall, but those 100,000 are specifically associated to their UUT.
         - Thus each UUT can have only 100,000 unique Serial Numbers.
         - Obviously, if ABT builds more than 100,000 of any specific UUT, they're in trouble.
         
         NOTE:  Regular Expression ^01BB2-[0-9]{5}$ enforces Serial Numbers that match ABT's Serial Number format of "01BB2-#####".
         - 01BB2-01234 & 01BB2-56789 are thus valid ABT Serial Numbers.
         - 01234 is invalid, as it lacks the "01BB2-" prefix.
         - 01BB2-1234 is invalid, as it lacks 5 digits after the "01BB2-" prefix.
         - 01BB2-O1234 is invalid, as "O1234" ≠ "01234" as "O" ≠ "0".
    -->

  <Apps>
		<Keysight>
      <BenchVue>C:\Program Files (x86)\Keysight\BenchVue\Platform\BenchVue\Keysight BenchVue.exe</BenchVue>
      <CommandExpert>C:\Program Files (x86)\Keysight\Command Expert\CommandExpert.exe</CommandExpert>
      <ConnectionExpert>C:\Program Files\Keysight\IO Libraries Suite\ConnectionExpert.exe</ConnectionExpert>
		</Keysight>
    <MeasurementComputing>
      <InstaCal>C:\Program Files (x86)\Measurement Computing\DAQ\inscal32.exe</InstaCal>
    </MeasurementComputing>
    <Microchip>
      <MPLAB_IPE>C:\Program Files\Microchip\MPLABX\v6.15\mplab_platform\bin\mplab_ipe64.exe</MPLAB_IPE>
      <MPLAB_X_IDE>C:\Program Files\Microchip\MPLABX\v6.15\mplab_platform\bin\mplab_ide64.exe</MPLAB_X_IDE>
    </Microchip>
    <Microsoft>
      <SQLServerManagementStudio></SQLServerManagementStudio>
      <VisualStudio>C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\devenv.exe</VisualStudio>
      <VisualStudioCode>C:\Program Files\Microsoft VS Code\Code.exe</VisualStudioCode>
      <XMLNotepad>C:\Program Files (x86)\LovettSoftware\XmlNotepad\XmlNotepad.exe</XMLNotepad>
    </Microsoft>
    <TexasInstruments>
      <SMBus_I2C_SAA_Tool>C:\Program Files (x86)\Texas Instruments\Fusion Digital Power Designer\bin\Fusion Tool Launcher.exe</SMBus_I2C_SAA_Tool>
    </TexasInstruments>
  </Apps>

  <Folders>
    <BarcodeScanner>P:\Test\Engineers\Equipment Manuals\TestExec\Honeywell Voyager 1200g</BarcodeScanner>		<!-- Honeywell Voyager USB 1200g corded Barcode Scanner -->
    <Instruments>P:\Test\Engineers\Equipment Manuals</Instruments>
    <TestPlans>C:\Program Files\ABT</TestPlans>																															<!-- TestPlan executables. -->
  </Folders>

  <Instruments>
    <Instrument>
      <ID>MM1_34401A</ID>
      <Description>Agilent 34401A Digital Multimeter</Description>
      <Address>GPIB0::4::INSTR</Address>
      <ClassName>MM_34401A</ClassName>
    </Instrument>
    <Instrument>
      <ID>MF1_34980A</ID>
      <Description>Agilent 34980A Multifunction Switch/Measure Unit</Description>
      <Address>GPIB0::2::INSTR</Address>
      <ClassName>MF_34980A</ClassName>
    </Instrument>
    <Instrument>
      <ID>PS1ε2_E3649A</ID>
      <Description>Agilent E3649A Dual Output DC Power Supply</Description>
      <Address>GPIB0::1::INSTR</Address>
      <ClassName>PS_E3649A</ClassName>
    </Instrument>
    <Instrument>
      <ID>PS3_E3634A</ID>
      <Description>Keysight E3634A Single Ouput Dual Range DC Power Supply</Description>
      <Address>GPIB0::3::INSTR</Address>
      <ClassName>PS_E3634A</ClassName>
    </Instrument>
    <Instrument>
      <ID>WG1ε2_3162</ID>
      <Description>Teledyne LeCroy WaveStation 3162 Two Channel Waveform Generator</Description>
      <Address>USB0::0x05FF::0x0A21::LCRY3602C00333::0::INSTR</Address>
      <ClassName>Agilent.CommandExpert.ScpiNet.AgSCPI99_1_0.AgSCPI99, AgSCPI99_1_0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=344b812ea93ad2d2</ClassName>
    </Instrument>
  <!--
    <Instrument>
      <ID>MSO1</ID>
      <Description>Tektronix MSO3014 Mixed Signal Oscilloscope</Description>
      <Address>USB0::0x0699::0x0421::C021373::INSTR</Address>
      <ClassName>MSO_3014</ClassName>
    </Instrument>
  -->
  </Instruments>
</Configuration>